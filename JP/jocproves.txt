world 12 7
robot 0 0 1 left

walls [0 3 left, 0 4 left, 0 3 up, 0 3 right, 0 4 right, 0 3 down]
walls [1 3 right, 1 4 right, 2 4 down] 
walls [4 3 left, 4 3 up, 4 3 right, 4 3 down, 4 4 left, 4 4 down, 4 4
right]
walls [5 3 right, 5 4 right, 6 3 up, 6 3 down, 6 4 down]
walls [11 3 up, 11 3 left, 10 3 up, 11 4 left]

walls [7 3 right, 7 4 right, 8 3 up, 8 3 right, 8 3 down, 9 4 right, 9 4 up] 

walls [0 6 down, 1 6 down, 2 6 down, 3 6 down, 4 6 down, 5 6 down, 6 6 down, 7
6 down, 8 6 down, 9 6 down]

walls [0 0 up, 1 0 up, 2 0 up, 3 0 up, 4 0 up, 5 0 up, 6 0 up, 7 0 up, 8 0 up,
9 0 up]

define _move {
    if (isClear) { move; }
    if not isClear { _putbeeper; }
}

define _pickbeeper {
    if (foundBeeper) { pickbeeper; }
}

define _putbeeper {
    if (anyBeepersInBag) { putbeeper;}
}

beepers 11 0 10

define turnright { iterate 3 { turnleft; } }
define _turnright { turnright; }

define opposite { iterate 2 { turnleft; } }
define _opposite { iterate 1 { opposite; } }

define _pickAllBeepers { if foundBeeper { pickbeeper; _pickAllBeepers; } }

walls [1 1 up, 1 1 right, 3 1 down, 3 1 left]

beepers 0 0 1
beepers 0 3 9
beepers 4 3 2
beepers 4 4 1

begin

_opposite;
_move;
_turnright;

iterate 5 { _move; }

_turnright;
_move;
_turnright;
_move;

_move;
_pickbeeper;

_opposite;
_move;
_move;
_move;
move;

turnleft;
_pickAllBeepers;


iterate 7 { move; }

turnleft;

iterate 2 { move; }

turnleft;

_move;
move;

iterate 3 { _opposite; }

_move;
turnleft;
move;
turnleft;
move;
_move;
turnleft;
_move;

turnleft;
_move;
_move;
_move;
turnright;
_move;
_move;
turnleft;
_move;
move;
move;
turnleft;
_move;
_move;
move;

turnright;
move;

opposite;
move;
turnright;
move;
move;
move;
turnright;
move;
turnleft;
move;
move;
turnright;
_move;
move;
move;
_pickAllBeepers;

_opposite;
iterate 10 { _move; }
turnleft;

iterate 2 { move; }

turnright;
move;
turnleft;
move;
turnleft;
iterate 2 { move; }
turnleft;
iterate 2 { move; }
opposite;
move;
turnleft;
move;
turnleft;
move;
turnleft;
iterate 2 { move; }

opposite;
iterate 2 { move; }
turnleft;
move;
turnright;
move;
turnright;
move;
iterate 2 { move; }
turnright;
iterate 2 { move; }
opposite;
move;
turnright;
move;
turnright;
move;
turnright;
iterate 2 { move; }

end
